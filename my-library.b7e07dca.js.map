{"mappings":"qLAAO,SAASA,EAA0BC,EAAKC,GAC7C,MAAMC,EAASD,EAAME,KAAI,EAACC,KAACA,MAC3B,MAAMC,EAqBR,SAAwBA,GACvB,IAAIC,EAAgB,GACnBD,EAAOE,SAAQC,IACbF,EAAcG,KAAKD,EAAEE,KAAK,IAIzBJ,EAAcK,OAAS,IACzBL,EAAgBA,EAAcM,OAAO,EAAG,GAAGC,KAAK,MAAQ,WAG1D,OAAOP,C,CAhCSQ,CAAcV,EAAKC,QAE/B,MAAO,8CAA8CD,EAAKW,+DACPX,EAAKY,qBAAqBZ,EAAKa,2HAEjDb,EAAKa,6FAELZ,6CACDD,EAAKc,aAAaC,MAAM,EAAG,kDAC3Bf,EAAKgB,aAAaC,QAAQ,8EAKtD,IAEJR,KAAK,IAERb,EAAIsB,YAAYC,mBAAmB,YAAarB,E,gTCjBlDsB,EAAA,S,iCCAC,IAAAC,EAAAD,EAAA,S,4BAcEE,aAAaC,QAJe,UAIeC,KAAKC,UADvC,CAAC,UAMb,SAASC,EAAMC,GACd,IACE,MAAMC,EAAkBN,aAAaO,QAAQF,GAC7C,OAA2B,OAApBC,OAA2BE,EAAYN,KAAKO,MAAMH,E,CACzD,MAAOI,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,EAyB5CC,eAAeC,EAAmBC,GACjC,IACC,MAAMC,EAAkBD,EAAItC,KAAIoC,MAAOxB,SAAa,EAAAU,EAAAkB,eAAc5B,KAC5DX,QAAawC,QAAQC,IAAIH,GAE9B3C,EAA0B+C,EAAA9C,IAAKI,E,CAC/B,MAAOgC,GACPC,QAAQU,IAAIX,E,EAvCfV,aAAaC,QANgB,QAMYC,KAAKC,UADlC,CAAC,UAYbmB,SAASC,iBAAiB,oBAI1B,WAGCT,EADqBV,EAxBS,W,IAmB/BgB,EAAA9C,IAAIkD,kBAAkBD,iBAAiB,SAQvC,SAA2BzC,GAC1BsC,EAAA9C,IAAIsB,YAAY6B,UAAY,GAE5BX,EADqBV,EA7BS,W,IAoB/BgB,EAAA9C,IAAIoD,gBAAgBH,iBAAiB,SAYrC,SAAyBzC,GACxBsC,EAAA9C,IAAIsB,YAAY6B,UAAY,GAE5BX,EADmBV,EAjCS,S","sources":["src/js/render/renderFilmByIdForLibrary.js","src/indexLibrary.js","src/js/library.js"],"sourcesContent":["export function renderFilmsByIdForLibrary(ref, datas) {\n  const markup = datas.map(({data}) => {\n  const genres = compareGenres(data.genres);\n\t\t//   console.log(typeof data.vote_average);\n\t    return `<li class=\"photo__card\" data-modal-open id=${data.id}\">\n            <img src=\"https://image.tmdb.org/t/p/w500/${data.poster_path}\" alt=\"${data.title}\" \"loading=\"lazy\" class=\"movie__image\"/>\n          <div class=\"movie__info\">\n            <h2 class=\"film__title\">${data.title}</h2>\n            <div class=\"movie__details\">\n            <p class=\"movie__genre\">${genres}</p>\n            <p class=\"movie__year\">${data.release_date.slice(0, 4)}</p>\n\t\t\t\t<p class=\"movie__vote-average\">${data.vote_average.toFixed(1)}</p>\n          </div>\n          </div>\n      </li>\n    </ul>\n  </div>`;\n    })\n    .join('');\n\n  ref.libraryList.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction compareGenres (genres) {\n\tlet arrayOfGenres = [];\n \tgenres.forEach(e => {\n\t \t arrayOfGenres.push(e.name);\n\t\t }\n\t);\n \n\tif (arrayOfGenres.length > 2) {\n\t  arrayOfGenres = arrayOfGenres.splice(0, 2).join(', ') + ', Other';\n\t  \n\t}\n\treturn arrayOfGenres;\n}\n","// Стили\n\n// Скрипты\nimport './js/api/api-vars';\nimport './js/api/fetch';\nimport './js/references/ref';\n\n// import './js/fetchAndRenderPopularFilm';\nimport './js/render/renderFilmByIdForLibrary';\nimport './js/render/modal-students';\n import './js/library';\nimport './js/modal';\n\nimport './js/requests/searchFilms';\nimport './js/render/renderSearchFilms';\n\n// Переключатель темы\n\nimport './js/switcher';\nimport './js/authentication/authentication';\n","// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n// import { fetchTrendedFilms } from './api/fetch';\n// import { fetchSearchedFilms } from './api/fetch';\n import { fetchFilmById } from './api/fetch';\nimport { fetchFilmGenres } from './api/fetch';\n// import { renderPopularFilms } from './render/renderPopularFilm';\nimport { renderFilmsByIdForLibrary } from './render/renderFilmByIdForLibrary';\n// import { renderFilms } from './render/renderHTML';\nimport { ref } from './references/ref';\n// import { options, pagination } from './pagination';\n// import { PAGES } from './api/api-vars';\n\n// let textContent = '';\nconst  LOCALSTORAGE_WATCHED =  \"watched\";\nconst  LOCALSTORAGE_QUEUE =  \"queue\";\n\nconst dyk = [800815];\n\t  localStorage.setItem(LOCALSTORAGE_WATCHED, JSON.stringify(dyk));\n\nconst qyk = [653851];\nlocalStorage.setItem(LOCALSTORAGE_QUEUE, JSON.stringify(qyk));\n\nfunction load (key) {\n\ttry {\n\t  const serializedState = localStorage.getItem(key);\n\t  return serializedState === null ? undefined : JSON.parse(serializedState);\n\t} catch (error) {\n\t  console.error(\"Get state error: \", error.message);\n\t}\n };\n\ndocument.addEventListener('DOMContentLoaded', onDOMContentLoaded);\nref.libraryWatchedBtn.addEventListener('click', onClickWatchedBtn);\nref.libraryQueueBtn.addEventListener('click', onClickQueueBtn);\n\nfunction onDOMContentLoaded() {\n\t// console.log(ref.libraryWatchedBtn.style);\n\tconst arrayWatched = load (LOCALSTORAGE_WATCHED);\n\tfetchAndRenderFilm(arrayWatched);\t\n}\nfunction onClickWatchedBtn(e) {\n\tref.libraryList.innerHTML = \"\";\n const arrayWatched = load (LOCALSTORAGE_WATCHED);\n fetchAndRenderFilm(arrayWatched);\n }\nfunction onClickQueueBtn(e) {\n\tref.libraryList.innerHTML = \"\";\n\tconst arrayQueue = load (LOCALSTORAGE_QUEUE);\n\tfetchAndRenderFilm(arrayQueue);\n}\n// const ids = [550, 299536, 383498];\n// console.log(ids.map(id => console.log(id)));\nasync function fetchAndRenderFilm(ids) {\n\ttry {\n\t const arrayOfPromises = ids.map(async (id) => await fetchFilmById(id));\n\t const data = await Promise.all(arrayOfPromises);\n\t//   console.log(data);\n\t  renderFilmsByIdForLibrary(ref, data);\n\t} catch (error) {\n\t  console.log(error);\n\t}\n }\n\n"],"names":["$6738d43fa735efb9$export$b43b458119400d44","ref","datas","markup","map","data","genres","arrayOfGenres","forEach","e","push","name","length","splice","join","$6738d43fa735efb9$var$compareGenres","id","poster_path","title","release_date","slice","vote_average","toFixed","libraryList","insertAdjacentHTML","parcelRequire","$i2Aqx","localStorage","setItem","JSON","stringify","$1cafa503bc57b7a0$var$load","key","serializedState","getItem","undefined","parse","error","console","message","async","$1cafa503bc57b7a0$var$fetchAndRenderFilm","ids","arrayOfPromises","fetchFilmById","Promise","all","$3IenU","log","document","addEventListener","libraryWatchedBtn","innerHTML","libraryQueueBtn"],"version":3,"file":"my-library.b7e07dca.js.map"}