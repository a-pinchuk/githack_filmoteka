{"mappings":"qLACO,SAASA,EAA0BC,EAAKC,GAC7C,MAAMC,EAASD,EAAME,KAAI,EAACC,KAACA,MAC3B,MAAMC,EAmBR,SAAwBA,GACvB,IAAIC,EAAgB,GACnBD,EAAOE,SAAQC,IACbF,EAAcG,KAAKD,EAAEE,KAAK,IAIzBJ,EAAcK,OAAS,IACzBL,EAAgBA,EAAcM,OAAO,EAAG,GAAGC,KAAK,MAAQ,WAG1D,OAAOP,C,CA9BSQ,CAAcV,EAAKC,QAChC,MAAO,8CAA8CD,EAAKW,+DACNX,EAAKY,qBAAqBZ,EAAKa,2HAEjDb,EAAKa,6FAELZ,6CACDD,EAAKc,aAAaC,MAAM,EAAG,kDAC3Bf,EAAKgB,aAAaC,QAAQ,8EAKtD,IAEJR,KAAK,IACRb,EAAIsB,YAAYC,mBAAmB,YAAarB,E,gTChBlDsB,EAAA,S,sBDHAA,EAAA,S,WEGA,IAAAC,EAAAD,EAAA,S,4BAcGE,aAAaC,QAJe,UAIeC,KAAKC,UADvC,CAAC,UAMb,SAASC,EAAMC,GACd,IACE,MAAMC,EAAkBN,aAAaO,QAAQF,GAC7C,OAA2B,OAApBC,OAA2BE,EAAYN,KAAKO,MAAMH,E,CACzD,MAAOI,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,EAP5CZ,aAAaC,QANgB,QAMYC,KAAKC,UADlC,CAAC,UAYb,IACCU,SAASC,iBAAiB,oBAO3B,WAEC,MAAMC,EAAeX,EA5BS,WA8B9B,QAAmBI,IAAfO,EACH,OAIDC,EAAmBD,E,IAfnBE,EAAAC,IAAIC,kBAAkBL,iBAAiB,SAiBxC,SAA2BhC,GAC1BmC,EAAAC,IAAItB,YAAYwB,UAAY,GAC5B,MAAML,EAAeX,EAvCS,WAyC9B,QAAmBI,IAAfO,EACH,OAGDC,EAAmBD,E,IAxBnBE,EAAAC,IAAIG,gBAAgBP,iBAAiB,SA0BtC,SAAyBhC,GACxBmC,EAAAC,IAAItB,YAAYwB,UAAY,GAC5B,MAAME,EAAalB,EAhDS,SAkD5B,QAAiBI,IAAbc,EACH,OAGDN,EAAmBM,E,IAjChB,MAAOZ,GACTC,QAAQY,IAAIb,E,CAoCdc,eAAeR,EAAmBS,GACjC,IAEC,MAAMC,EAAkBD,EAAIhD,KAAI+C,MAAOnC,SAAa,EAAAU,EAAA4B,eAActC,KAC5DX,QAAakD,QAAQC,IAAIH,GAE9BrD,EAA0B4C,EAAAC,IAAKxC,E,CAC/B,MAAOoD,GACPnB,QAAQY,IAAIO,E","sources":["src/js/render/renderFilmByIdForLibrary.js","src/indexLibrary.js","src/js/library.js"],"sourcesContent":["import { ref } from '../references/ref';\nexport function renderFilmsByIdForLibrary(ref, datas) {\n  const markup = datas.map(({data}) => {\n  const genres = compareGenres(data.genres);\n \t\t return `<li class=\"photo__card\" data-modal-open id=${data.id}\">\n            <img src=\"https://image.tmdb.org/t/p/w500/${data.poster_path}\" alt=\"${data.title}\" \"loading=\"lazy\" class=\"movie__image\"/>\n          <div class=\"movie__info\">\n            <h2 class=\"film__title\">${data.title}</h2>\n            <div class=\"movie__details\">\n            <p class=\"movie__genre\">${genres}</p>\n            <p class=\"movie__year\">${data.release_date.slice(0, 4)}</p>\n\t\t\t\t<p class=\"movie__vote-average\">${data.vote_average.toFixed(1)}</p>\n          </div>\n          </div>\n      </li>\n    </ul>\n  </div>`;\n    })\n    .join('');\n  ref.libraryList.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction compareGenres (genres) {\n\tlet arrayOfGenres = [];\n \tgenres.forEach(e => {\n\t \t arrayOfGenres.push(e.name);\n\t\t }\n\t);\n \n\tif (arrayOfGenres.length > 2) {\n\t  arrayOfGenres = arrayOfGenres.splice(0, 2).join(', ') + ', Other';\n\t  \n\t}\n\treturn arrayOfGenres;\n}\n","// Стили\n\n// Скрипты\nimport './js/api/api-vars';\nimport './js/api/fetch';\nimport './js/references/ref';\n\n// import './js/fetchAndRenderPopularFilm';\nimport './js/render/renderFilmByIdForLibrary';\nimport './js/render/modal-students';\n import './js/library';\nimport './js/modal';\n\nimport './js/requests/searchFilms';\nimport './js/render/renderSearchFilms';\n\n// Переключатель темы\n\nimport './js/switcher';\nimport './js/authentication/authentication';\n","// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n// import { fetchTrendedFilms } from './api/fetch';\n// import { fetchSearchedFilms } from './api/fetch';\nimport { fetchFilmById } from './api/fetch';\nimport { fetchFilmGenres } from './api/fetch';\n// import { renderPopularFilms } from './render/renderPopularFilm';\nimport { renderFilmsByIdForLibrary } from './render/renderFilmByIdForLibrary';\n// import { renderFilms } from './render/renderHTML';\nimport { ref } from './references/ref';\n// import { options, pagination } from './pagination';\n// import { LOCALSTORAGE_WATCHED, LOCALSTORAGE_QUEUE } from './api/api-vars';\n\n// let textContent = '';\nconst  LOCALSTORAGE_WATCHED =  \"watched\";\nconst  LOCALSTORAGE_QUEUE =  \"queue\";\n\nconst dyk = [800815];\n\t  localStorage.setItem(LOCALSTORAGE_WATCHED, JSON.stringify(dyk));\n\nconst qyk = [653851];\nlocalStorage.setItem(LOCALSTORAGE_QUEUE, JSON.stringify(qyk));\n\nfunction load (key) {\n\ttry {\n\t  const serializedState = localStorage.getItem(key);\n\t  return serializedState === null ? undefined : JSON.parse(serializedState);\n\t} catch (error) {\n\t  console.error(\"Get state error: \", error.message);\n\t}\n };\n\ntry {\n\tdocument.addEventListener('DOMContentLoaded', onDOMContentLoaded);\n\tref.libraryWatchedBtn.addEventListener('click', onClickWatchedBtn);\n\tref.libraryQueueBtn.addEventListener('click', onClickQueueBtn);\n\t } catch (error) {\n\t\tconsole.log(error);\n\t }\n\nfunction onDOMContentLoaded() {\n\t// console.log(ref.libraryWatchedBtn.style);\n\tconst arrayWatched = load (LOCALSTORAGE_WATCHED);\n\t//   console.log(arrayWatched);\n\tif (arrayWatched===undefined) {\n\t\treturn\n\t}\n\t// // console.log(arrayWatched);\n\t// const ars =arrayWatched.map(ar => ar.id);\n\tfetchAndRenderFilm(arrayWatched);\t\n}\nfunction onClickWatchedBtn(e) {\n\tref.libraryList.innerHTML = \"\";\n\tconst arrayWatched = load (LOCALSTORAGE_WATCHED);\n\t// console.log(arrayWatched);\n\tif (arrayWatched===undefined) {\n\t\treturn\n\t}\n\t// const ars = arrayWatched.map(ar => ar.id);\n\tfetchAndRenderFilm(arrayWatched);\n }\nfunction onClickQueueBtn(e) {\n\tref.libraryList.innerHTML = \"\";\n\tconst arrayQueue = load (LOCALSTORAGE_QUEUE);\n\t// console.log(arrayQueue);\n\tif (arrayQueue===undefined) {\n\t\treturn\n\t}\n\t// const ars = arrayQueue.map(ar => ar.id);\n\tfetchAndRenderFilm(arrayQueue);\n}\n// const ids = [550, 299536, 383498];\n// console.log(ids.map(id => console.log(id)));\nasync function fetchAndRenderFilm(ids) {\n\ttry {\n\t\t// console.log(ids);\n\t const arrayOfPromises = ids.map(async (id) => await fetchFilmById(id));\n\t const data = await Promise.all(arrayOfPromises);\n\t//   console.log(data);\n\t  renderFilmsByIdForLibrary(ref, data);\n\t} catch (error) {\n\t  console.log(error);\n\t}\n }\n\n"],"names":["$6738d43fa735efb9$export$b43b458119400d44","ref1","datas","markup","map","data","genres","arrayOfGenres","forEach","e","push","name","length","splice","join","$6738d43fa735efb9$var$compareGenres","id","poster_path","title","release_date","slice","vote_average","toFixed","libraryList","insertAdjacentHTML","parcelRequire","$i2Aqx","localStorage","setItem","JSON","stringify","$1cafa503bc57b7a0$var$load","key","serializedState","getItem","undefined","parse","error","console","message","document","addEventListener","arrayWatched","$1cafa503bc57b7a0$var$fetchAndRenderFilm","$3IenU","ref","libraryWatchedBtn","innerHTML","libraryQueueBtn","arrayQueue","log","async","ids","arrayOfPromises","fetchFilmById","Promise","all","error1"],"version":3,"file":"my-library.a09db4e4.js.map"}